import React, { useState } from 'react'; 
import styles from './MangaXLogin.module.css';

const MangaXRegister = ({ onBackToLogin, onNextToProfile }) => {
    // 1. State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    const [formData, setFormData] = useState({
        firstName: '',
        lastName: '',
        displayName: '', // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå name ‡πÉ‡∏ô Backend
        email: '',
        password: '',
        confirmPassword: '',
    });
    const [error, setError] = useState('');

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Input
    const handleChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };
    
    // 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend
    const handleRegisterSubmit = async (e) => {
        e.preventDefault();
        setError(''); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏Å‡πà‡∏≤
        
        const { firstName, lastName, displayName, email, password, confirmPassword } = formData;
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (password !== confirmPassword) {
            setError('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
            return;
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å minLength="8")
        if (password.length < 8) {
            setError('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞');
            return;
        }
        
        try {
            // üí° 3. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: /api/users/register
            const response = await fetch('http://localhost:5000/api/users/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà Backend ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                body: JSON.stringify({
                    name: displayName || `${firstName} ${lastName}`, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏ß‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á
                    email,
                    password,
                    // ‡∏ü‡∏¥‡∏•‡∏î‡πå phone, gender, address ‡∏ñ‡∏π‡∏Å‡∏•‡∏∞‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏° ‡πÅ‡∏ï‡πà Backend ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
                }),
            });

            const data = await response.json();

            if (response.ok) {
                // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                alert('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πà‡∏≠');
                // Backend ‡∏Ñ‡∏ß‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
                localStorage.setItem('userInfo', JSON.stringify(data)); 
                onNextToProfile(); // ‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
            } else {
                // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ã‡πâ‡∏≥)
                setError(data.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô');
            }
        } catch (err) {
            setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Backend ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
            console.error('Network error:', err);
        }
    };

    return (
        <div className={styles.loginFormPanel}>
            <form onSubmit={handleRegisterSubmit}>
                <p className={styles.sectionHeading}>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</p>
                
                {/* üí° ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î */}
                {error && <p style={{ color: 'red', textAlign: 'center', fontWeight: 'bold' }}>{error}</p>}

                <p className={styles.orText} style={{ textAlign: 'left', marginTop: '10px' }}>**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß**</p>
                <div className={styles.inputGroup} style={{ display: 'flex', gap: '10px' }}>
                    <input type="text" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á" required style={{ flex: 1 }} 
                           name="firstName" value={formData.firstName} onChange={handleChange} />
                    <input type="text" placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" required style={{ flex: 1 }} 
                           name="lastName" value={formData.lastName} onChange={handleChange} />
                </div>

                <p className={styles.orText} style={{ textAlign: 'left', marginBottom: '5px' }}>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á</p>
                <div className={styles.inputGroup}>
                    <input type="text" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏â‡∏≤‡∏¢‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" required 
                           name="displayName" value={formData.displayName} onChange={handleChange} />
                </div>

                <p className={styles.orText} style={{ textAlign: 'left', marginBottom: '5px' }}>‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì</p>
                <div className={styles.inputGroup}>
                    <input type="email" placeholder="‡πÄ‡∏ä‡πà‡∏ô example@gmail.com" required 
                           name="email" value={formData.email} onChange={handleChange} />
                </div>

                <p className={styles.orText} style={{ textAlign: 'left', marginBottom: '5px' }}>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</p>
                <div className={styles.inputGroup}>
                    <input type="password" placeholder="‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞" required minLength="8" 
                           name="password" value={formData.password} onChange={handleChange} />
                </div>

                <p className={styles.orText} style={{ textAlign: 'left', marginBottom: '5px' }}>‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                <div className={styles.inputGroup}>
                    <input type="password" placeholder="" required 
                           name="confirmPassword" value={formData.confirmPassword} onChange={handleChange} />
                </div>

                <button type="submit" className={`${styles.primaryBtn} ${styles.loginBtn}`} style={{ marginTop: '20px' }}>
                    ‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                </button>
                
                <button 
                    type="button" 
                    onClick={onBackToLogin}
                    className={`${styles.primaryBtn} ${styles.createAccountBtn}`}
                    style={{ marginTop: '10px', backgroundColor: '#808080', border: 'none' }}
                >
                    ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </form>
        </div>
    );
};

export default MangaXRegister;