import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom"; // ЁЯТб р╣Ар╕Юр╕┤р╣Ир╕б useNavigate
import { FaSearch } from "react-icons/fa";
import { MdLogin, MdOutlineShoppingCart } from "react-icons/md";
import "./Buy.css";
import logo from "../assets/logo.png";
import book1 from "../assets/book1.png"; // (р╣Гр╕Кр╣Йр╣Ар╕Ыр╣Зр╕Щ Fallback)
// (Imports р╕гр╕╣р╕Ыр╕ар╕▓р╕Ю Footer р╕Др╕Зр╣Ар╕Фр╕┤р╕б)
import visaImage from '../assets/visa.png';
import mastercardImage from '../assets/mastercard.png';
import paypalImage from '../assets/paypal.png';
import fbImage from '../assets/fb.png';
import igImage from '../assets/ig.png';
import lineImage from '../assets/line.png';
import ytImage from '../assets/yt1.png';
import ttImage from '../assets/tt.png';
import xImage from '../assets/x.png';

// ЁЯТб URL р╕Рр╕▓р╕Щр╕Вр╕нр╕З API Cart
const API_CART_URL = 'http://localhost:5000/api/cart';

function Buy() {
  const navigate = useNavigate();
  
  // ЁЯТб State р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕░р╕Бр╕гр╣Йр╕▓р╕Ир╕▓р╕Б API
  const [cart, setCart] = useState({ items: [], total: 0 });
  const [userId, setUserId] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // ----------------------------------------------------
  // ЁЯТб 1. р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й (User ID) р╣Ар╕бр╕╖р╣Ир╕нр╣Вр╕лр╕ер╕Фр╕лр╕Щр╣Йр╕▓
  // ----------------------------------------------------
  useEffect(() => {
    const userInfo = localStorage.getItem('userInfo');
    if (!userInfo) {
      alert('р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕Хр╕░р╕Бр╕гр╣Йр╕▓р╕кр╕┤р╕Щр╕Др╣Йр╕▓');
      navigate('/login');
    } else {
      const user = JSON.parse(userInfo);
      setUserId(user._id); // р╣Ар╕Бр╣Зр╕Ъ User ID р╣Др╕зр╣Йр╣Гр╕Щ State
    }
  }, [navigate]);

  // ----------------------------------------------------
  // ЁЯТб 2. р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕░р╕Бр╕гр╣Йр╕▓ (Fetch Cart)
  // ----------------------------------------------------
  const fetchCart = async (currentUserId) => {
    if (!currentUserId) return;
    
    setLoading(true);
    setError(null);
    try {
      const response = await fetch(`${API_CART_URL}/user/${currentUserId}`);
      if (!response.ok) {
        throw new Error('р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕░р╕Бр╕гр╣Йр╕▓р╣Др╕Фр╣Й');
      }
      const data = await response.json();
      setCart(data);
    } catch (err) {
      setError(err.message);
      console.error("Fetch cart error:", err);
    } finally {
      setLoading(false);
    }
  };

  // ЁЯТб 3. р╣Ар╕гр╕╡р╕вр╕Б fetchCart р╣Ар╕бр╕╖р╣Ир╕н User ID р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
  useEffect(() => {
    if (userId) {
      fetchCart(userId);
    }
  }, [userId]);

  // ----------------------------------------------------
  // ЁЯТб 4. р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Хр╕░р╕Бр╕гр╣Йр╕▓ (р╣Ар╕Кр╕╖р╣Ир╕нр╕б Backend)
  // ----------------------------------------------------

  // ЁЯФС р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓ (DELETE /api/cart/remove/:userId/:bookId)
  const removeItem = async (bookId) => {
    try {
      const response = await fetch(`${API_CART_URL}/remove/${userId}/${bookId}`, {
        method: 'DELETE'
      });
      if (response.ok) {
        fetchCart(userId); // ЁЯТб р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕░р╕Бр╕гр╣Йр╕▓р╣Гр╕лр╕бр╣И
      } else {
        alert('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓');
      }
    } catch (err) {
      console.error('Remove item error:', err);
      alert('р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
    }
  };

  // ЁЯФС р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕Ир╕│р╕Щр╕зр╕Щ (POST /api/cart/add)
  // (Backend API [cite: cartRoutes.js] р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╣Гр╕Кр╣Й /add р╣Ар╕Юр╕╖р╣Ир╕нр╕Ър╕зр╕Б/р╕ер╕Ъ р╕Ир╕│р╕Щр╕зр╕Щ)
  const updateQuantity = async (book, quantityChange) => {
    try {
      const response = await fetch(`${API_CART_URL}/add`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          userId: userId,
          bookId: book.bookId,
          title: book.title,
          price: book.price,
          quantity: quantityChange // ЁЯТб р╕кр╣Ир╕Зр╣Бр╕Др╣Ир╕кр╣Ир╕зр╕Щр╕Хр╣Ир╕▓р╕З (1 р╕лр╕гр╕╖р╕н -1)
        })
      });
      if (response.ok) {
        fetchCart(userId); // ЁЯТб р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕░р╕Бр╕гр╣Йр╕▓р╣Гр╕лр╕бр╣И
      } else {
        alert('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕Ир╕│р╕Щр╕зр╕Щ');
      }
    } catch (err) {
      console.error('Update quantity error:', err);
      alert('р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
    }
  };

  // р╕Др╕│р╕Щр╕зр╕Ур╕гр╕▓р╕Др╕▓р╕гр╕зр╕б (р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Б state)
  const subtotal = cart.total;
  const shipping = 50; // р╕Др╣Ир╕▓р╕Ир╕▒р╕Фр╕кр╣Ир╕З
  const total = subtotal + shipping;

  // ----------------------------------------------------
  // ЁЯТб 5. р╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕Ьр╕е (Render)
  // ----------------------------------------------------

  if (loading) {
    return <div className="loading-screen">р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Фр╕Хр╕░р╕Бр╕гр╣Йр╕▓...</div>;
  }
  
  if (error) {
    return <div className="error-screen">р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {error}</div>;
  }

  return (
    <div className="buy-page">
      {/* Header (ЁЯТб р╣Ар╕Юр╕┤р╣Ир╕б onClick р╣Гр╕лр╣Й Icons) */}
      <header className="buy-header">
        <img src={logo} alt="BookStore Logo" className="buy-logo" />
        <nav>
          <Link to="/homepage">р╕лр╕Щр╣Йр╕▓р╣Бр╕гр╕Б</Link>
          <Link to="/SeeAlltop10">10 р╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ</Link>
        </nav>
        <div className="buy-search-container">
          <MdOutlineShoppingCart 
            className="buy-header-icon" 
            style={{ cursor: 'pointer' }}
            onClick={() => navigate('/buy')} // р╕Др╕ер╕┤р╕Бр╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╕Хр╕░р╕Бр╕гр╣Йр╕▓ (р╕лр╕Щр╣Йр╕▓р╣Ар╕Фр╕┤р╕б)
          />
          <MdLogin 
            className="buy-header-icon" 
            style={{ cursor: 'pointer' }}
            onClick={() => navigate('/login')} // р╕Др╕ер╕┤р╕Бр╣Др╕Ыр╕лр╕Щр╣Йр╕▓ Login
          />
          <input
            type="text"
            placeholder="р╕Др╣Йр╕Щр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Хр╕▓р╕бр╕Кр╕╖р╣Ир╕нр╣Ар╕гр╕╖р╣Ир╕нр╕З"
            className="buy-search-bar"
          />
          <FaSearch className="buy-search-icon" />
        </div>
      </header>

      {/* р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕лр╕ер╕▒р╕Б */}
      <main className="buy-main">
        {/* ... (р╕кр╣Ир╕зр╕Щ buy-steps р╕Др╕Зр╣Ар╕Фр╕┤р╕б) ... */}
        <section className="buy-steps">
┬а ┬а ┬а ┬а ┬а <div className="buy-step active">
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-number">1</div>
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-text">р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕Щр╕Хр╕░р╕Бр╕гр╣Йр╕▓</div>
┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а <div className="buy-step">
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-number">2</div>
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-text">р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Чр╕╡р╣Ир╕Ир╕▒р╕Фр╕кр╣Ир╕З</div>
┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а <div className="buy-step">
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-number">3</div>
┬а ┬а ┬а ┬а ┬а ┬а <div className="buy-step-text">р╕зр╕┤р╕Шр╕╡р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ</div>
┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а </section>

        {/* р╕Хр╕▓р╕гр╕▓р╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Бр╕ер╕░р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Бр╕▓р╕г */}
        <section className="buy-cart-container">
          <div className="buy-cart-content">
            {/* р╕Хр╕▓р╕гр╕▓р╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕┤р╕Щр╕Др╣Йр╕▓ */}
            <div className="buy-cart-section">
              <h2 className="buy-section-title">р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕┤р╕Щр╕Др╣Йр╕▓ ({cart.items.length})</h2>
              <div className="buy-cart-table">
                <div className="buy-table-header">
                  <div className="buy-header-item">р╕кр╕┤р╕Щр╕Др╣Йр╕▓</div>
                  <div className="buy-header-item">р╕гр╕▓р╕Др╕▓р╕Хр╣Ир╕нр╕лр╕Щр╣Ир╕зр╕в</div>
                  <div className="buy-header-item">р╕Ир╕│р╕Щр╕зр╕Щ</div>
                  <div className="buy-header-item">р╕гр╕▓р╕Др╕▓р╕гр╕зр╕б</div>
                  <div className="buy-header-item">р╕Ир╕▒р╕Фр╕Бр╕▓р╕г</div>
                </div>
                
                {/* ЁЯТб р╕зр╕Щр╕ер╕╣р╕Ыр╕Ир╕▓р╕Б cart.items р╕Чр╕╡р╣Ир╕бр╕▓р╕Ир╕▓р╕Б API */}
                {cart.items.length > 0 ? cart.items.map((item) => (
                  <div key={item.bookId} className="buy-table-row">
                    <div className="buy-table-cell buy-product-info">
                      <img 
                        src={item.image || book1} // ЁЯТб р╣Гр╕Кр╣Й book1 р╣Ар╕Ыр╣Зр╕Щ fallback
                        alt={item.title} 
                        className="buy-product-image" 
                      />
                      <span className="buy-product-title">{item.title}</span>
                    </div>
                    <div className="buy-table-cell buy-unit-price">
                      р╕┐{item.price.toFixed(2)}
                    </div>
                    <div className="buy-table-cell buy-quantity">
                      <div className="buy-quantity-controls">
                        <button 
                          className="buy-quantity-btn"
                          onClick={() => updateQuantity(item, -1)} // ЁЯТб р╣Ар╕гр╕╡р╕вр╕Б API
                          disabled={item.quantity <= 1}
                        >
                          -
                        </button>
                        <span className="buy-quantity-number">{item.quantity}</span>
                        <button 
                          className="buy-quantity-btn"
                          onClick={() => updateQuantity(item, 1)} // ЁЯТб р╣Ар╕гр╕╡р╕вр╕Б API
                        >
                          +
                        </button>
                      </div>
                    </div>
                    <div className="buy-table-cell buy-total-price">
                      р╕┐{(item.price * item.quantity).toFixed(2)}
                    </div>
                    <div className="buy-table-cell buy-actions">
                      <button 
                        className="buy-remove-btn"
                        onClick={() => removeItem(item.bookId)} // ЁЯТб р╣Ар╕гр╕╡р╕вр╕Б API
                      >
                        р╕ер╕Ъ
                      </button>
                    </div>
                  </div>
                )) : (
                  <div className="buy-table-row empty-cart">
                    <p>р╣Др╕бр╣Ир╕бр╕╡р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕Щр╕Хр╕░р╕Бр╕гр╣Йр╕▓</p>
                  </div>
                )}
              </div>
            </div>

            {/* р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н (р╣Гр╕Кр╣Й subtotal р╣Бр╕ер╕░ total р╕Ир╕▓р╕Б state) */}
            <div className="buy-summary-section">
              <h2 className="buy-section-title">р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н</h2>
              <div className="buy-summary-card">
                <div className="buy-summary-row">
                  <span>р╕вр╕нр╕Фр╕гр╕зр╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓</span>
                  <span>р╕┐{subtotal.toFixed(2)}</span>
                </div>
                <div className="buy-summary-row">
                  <span>р╕Др╣Ир╕▓р╕Ир╕▒р╕Фр╕кр╣Ир╕З</span>
                  <span>р╕┐{shipping.toFixed(2)}</span>
                </div>
                <div className="buy-summary-divider"></div>
                <div className="buy-summary-row buy-total">
                  <span>р╕гр╕зр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф</span>
                  <span>р╕┐{total.toFixed(2)}</span>
                </div>
                {/* ЁЯТб р╕Ыр╕┤р╕Фр╕Ыр╕╕р╣Ир╕бр╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕бр╕╡р╕кр╕┤р╕Щр╕Др╣Йр╕▓ */}
                <Link to="/address" style={{ pointerEvents: cart.items.length === 0 ? 'none' : 'auto' }}>
                  <button 
                    className="buy-checkout-btn" 
                    disabled={cart.items.length === 0}
                  >
                    р╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ
                  </button>
                </Link>
              </div>
            </div>
          </div>
        </section>
      </main>

      {/* Footer (р╣Вр╕Др╣Йр╕Фр╣Ар╕Фр╕┤р╕б) */}
      <footer className="buy-footer">
        <div className="buy-footer-content">
          <div className="buy-footer-section">
            <p><strong>р╕Чр╕▓р╕Зр╕ер╕▒р╕Ф</strong></p>
            <p>р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Вр╕▓р╕вр╕Фр╕╡ 10 р╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ</p>
            <p>р╕Хр╣Ир╕нр╕кр╕╣р╣Й</p>
            <p>р╣Вр╕гр╣Бр╕бр╕Щр╕Лр╣М</p>
            <p>р╕Бр╕╡р╕мр╕▓</p>
          </div>
          
          <div className="buy-footer-section">
            <p><strong>р╕Кр╣Ир╕нр╕Зр╕Чр╕▓р╕Зр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ</strong></p>
            <div className="buy-payment-methods">
              <div className="buy-image-link">
                <img src={visaImage} alt="visa" />
              </div>
              <div className="buy-image-link">
                <img src={mastercardImage} alt="mastercard" />
              </div>
              <div className="buy-image-link">
                <img src={paypalImage} alt="paypal" />
              </div>
            </div>
          </div>

          <div className="buy-footer-section buy-third-column">
            <p><strong>р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Вр╣Ир╕▓р╕зр╕кр╕▓р╕гр╣Др╕Фр╣Йр╕Чр╕╡р╣И</strong></p>
            <div className="buy-social-icons">
              <div className="buy-social-row">
                <div className="buy-image-link">
                  <img src={fbImage} alt="facebook" />
                </div>
                <div className="buy-image-link">
                  <img src={igImage} alt="instagram" />
                </div>
                <div className="buy-image-link">
                  <img src={lineImage} alt="line" />
                </div>
              </div>
              <div className="buy-social-row">
                <div className="buy-image-link">
                  <img src={ytImage} alt="youtube" />
                </div>
                <div className="buy-image-link">
                  <img src={ttImage} alt="tiktok" />
                </div>
                <div className="buy-image-link">
                  <img src={xImage} alt="x" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default Buy;
