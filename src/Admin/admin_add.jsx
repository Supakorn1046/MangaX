import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './admin_add.css';
import logo from '../assets/logo.png';
import { CartIcon, LogoutIcon, AddIcon } from './admin_icon.jsx'; 

// URL ‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á API
const API_BASE_URL = 'http://localhost:5000/api/books';

function AdminAdd() {
    const navigate = useNavigate();

    // üí° ‡∏õ‡∏£‡∏±‡∏ö State: ‡πÄ‡∏û‡∏¥‡πà‡∏° 'category'
    const [product, setProduct] = useState({
        title: '',
        author: '',
        description: '',
        price: '',
        stock: '',
        image: '',
        category: '' // üí° New: ‡πÄ‡∏û‡∏¥‡πà‡∏° category
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á input
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setProduct(prev => ({
            ...prev,
            [name]: value
        }));
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏Ñ‡∏≤ (Code unchanged)
    const handlePriceChange = (e) => {
        let value = e.target.value;
        value = value.replace(/[^\d.]/g, '');
        const decimalCount = (value.match(/\./g) || []).length;
        if (decimalCount > 1) {
            value = value.slice(0, -1);
        }
        setProduct(prev => ({
            ...prev,
            price: value
        }));
    };

    const handleBack = () => {
        navigate('/admin_list');
    };
    
    const handleLogout = () => {
        localStorage.removeItem('userInfo');
        localStorage.removeItem('isAdmin');
        navigate('/login');
    };

    // üí° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á)
    const handleSubmit = async (event) => {
        event.preventDefault(); 
        
        // --- 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Validation) ---
        // üí° ‡πÄ‡∏û‡∏¥‡πà‡∏° category ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        if (!product.title || !product.author || !product.price || !product.stock || !product.category) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á, ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó)');
            return;
        }

        const priceValue = parseFloat(product.price);
        const stockValue = parseInt(product.stock, 10);
        
        if (isNaN(priceValue) || priceValue < 0) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            return;
        }
        if (isNaN(stockValue) || stockValue < 0) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            return;
        }
        // --- ‡∏à‡∏ö Validation ---

        const productData = {
            title: product.title,
            author: product.author,
            description: product.description,
            price: priceValue,
            stock: stockValue,
            image: product.image,
            category: product.category, // üí° New: ‡∏™‡πà‡∏á category ‡πÑ‡∏õ Backend
        };
        
        try {
            // 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API POST ‡πÑ‡∏õ‡∏ó‡∏µ‡πà /api/books
            const response = await fetch(API_BASE_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(productData),
            });
            
            const data = await response.json();

            if (response.ok) { // Status 200 OK (‡∏ï‡∏≤‡∏° bookRoutes.js)
                alert('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
                navigate('/admin_list');
            } else {
                alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${data.message || 'Unknown Error'}`);
            }
        } catch (error) {
            console.error('Error adding product:', error);
            alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ');
        }
    };

    return (
        <div className="admin-add-page">
            {/* ===== ‡∏™‡πà‡∏ß‡∏ô Sidebar (‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢) ===== */}
            <aside className="sidebar">
                <div className="sidebar-logo">
                    <img src={logo} alt="Manga Logo" />
                </div>
                <nav className="sidebar-nav">
                    <ul>
                        <li className="active">
                            <a href="#" onClick={handleBack}>
                                <CartIcon /> ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                            </a>
                        </li>
                        <li>
                            <a href="#" onClick={handleLogout}> 
                                <LogoutIcon /> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                            </a>
                        </li>
                    </ul>
                </nav>
            </aside>

            {/* ===== ‡∏™‡πà‡∏ß‡∏ô Content ‡∏´‡∏•‡∏±‡∏Å ===== */}
            <main className="main-content">
                <header className="content-header">
                    <h1><AddIcon /> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
                    <button className="btn btn-back" onClick={handleBack}>‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</button>
                </header>
                
                {/* ===== ‡∏™‡πà‡∏ß‡∏ô Form ===== */}
                <form className="product-form" onSubmit={handleSubmit}>
                    
                    {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á */}
                    <div className="form-group">
                        <label htmlFor="title">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á *</label>
                        <input 
                            type="text" 
                            id="title"
                            name="title"
                            value={product.title}
                            onChange={handleInputChange}
                            placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠..."
                            required
                        />
                    </div>

                    {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á */}
                    <div className="form-group">
                        <label htmlFor="author">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á *</label>
                        <input 
                            type="text" 
                            id="author"
                            name="author"
                            value={product.author}
                            onChange={handleInputChange}
                            placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á..."
                            required
                        />
                    </div>

                    {/* üí° New: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                    <div className="form-group">
                        <label htmlFor="category">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (Category) *</label>
                        <input 
                            type="text" 
                            id="category"
                            name="category"
                            value={product.category}
                            onChange={handleInputChange}
                            placeholder="‡πÄ‡∏ä‡πà‡∏ô: ‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ, ‡∏Å‡∏µ‡∏¨‡∏≤, ‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ã‡πå"
                            required
                        />
                    </div>

                    {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤ */}
                    <div className="form-row">
                        <div className="form-group">
                            <label htmlFor="stock">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (Stock) *</label>
                            <input 
                                type="text" 
                                id="stock"
                                name="stock"
                                value={product.stock}
                                onChange={handleInputChange}
                                placeholder="0"
                                required
                            />
                        </div>
                        <div className="form-group">
                            <label htmlFor="price">‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ö‡∏≤‡∏ó) *</label>
                            <input 
                                type="text" 
                                id="price"
                                name="price"
                                value={product.price}
                                onChange={handlePriceChange}
                                placeholder="0.00"
                                required
                            />
                        </div>
                    </div>

                    {/* ‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                    <div className="form-group">
                        <label htmlFor="image">‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</label>
                        <input 
                            type="text" 
                            id="image"
                            name="image"
                            value={product.image}
                            onChange={handleInputChange}
                            placeholder="‡πÄ‡∏ä‡πà‡∏ô URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"
                        />
                        {product.image && (
                            <div className="image-preview">
                                <img src={product.image} alt="Preview" className="preview-image" />
                                <small></small>
                            </div>
                        )}
                    </div>

                    {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                    <div className="form-group">
                        <label htmlFor="description">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</label>
                        <textarea 
                            id="description" 
                            name="description"
                            rows="6"
                            value={product.description}
                            onChange={handleInputChange}
                            placeholder="‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..."
                        ></textarea>
                    </div>

                    {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
                    <div className="form-actions">
                        <button type="submit" className="btn btn-submit">
                            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                        </button>
                        <button type="button" className="btn btn-cancel" onClick={handleBack}>
                            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </button>
                    </div>

                </form>
            </main>
        </div>
    );
}

export default AdminAdd;